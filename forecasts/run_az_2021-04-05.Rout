
R version 4.0.5 (2021-03-31) -- "Shake and Throw"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> 
> ## ## Obtain environment variables
> 
> ## forecast_date <- lubridate::ymd(Sys.getenv("FORECAST_DATE"))
> ## today  <- lubridate::ymd(Sys.getenv("TODAY"))
> ## ##output_dir  <- Sys.getenv("OUTPUT_DIR")
> ## ## We can fix this at /mnt
> ## output_dir  <- "/mnt"
> 
> 
> ## Install evalcast from the evalcast branch
> devtools::install_github("cmu-delphi/covidcast", ref = "evalcast",
+                          subdir = "R-packages/evalcast", upgrade = "never")
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo cmu-delphi/covidcast@evalcast
Downloading GitHub repo reichlab/zoltr@HEAD
     checking for file '/tmp/Rtmp02QPGX/remotesa5abcf2cb/reichlab-zoltr-2994e69/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa5abcf2cb/reichlab-zoltr-2994e69/DESCRIPTION'
  -  preparing 'zoltr':
     checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
  -  checking for LF line-endings in source and make files and shell scripts
  -  checking for empty or unneeded directories
  -  building 'zoltr_0.7.tar.gz'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'zoltr' ...
** using staged installation
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (zoltr)
Downloading GitHub repo reichlab/covidHubUtils@HEAD
     checking for file '/tmp/Rtmp02QPGX/remotesa2b8ffd0a/reichlab-covidHubUtils-06eef72/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa2b8ffd0a/reichlab-covidHubUtils-06eef72/DESCRIPTION'
  -  preparing 'covidHubUtils':
     checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
  -  installing the package to process help pages
  -  checking for LF line-endings in source and make files and shell scripts (3.9s)
  -  checking for empty or unneeded directories
     NB: this package now depends on R (>= 3.5.0)
     WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects:  'covidHubUtils/data/hub_locations.rda'  WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects:  'covidHubUtils/data/hub_targets_ecdc.rda'  WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects:  'covidHubUtils/data/hub_targets_us.rda'
-  building 'covidHubUtils_0.1.5.tar.gz'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/COVIDhub-baseline/metadata-COVIDhub-baseline.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/COVIDhub-ensemble/metadata-COVIDhub-ensemble.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/teamA-modelA/metadata-teamA-modelA.txt'
   Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/teamB-modelB/metadata-teamB-modelB.txt'
   Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/teamC-modelC/metadata-teamC-modelC.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/teamD-modelD/metadata-teamD-modelD.txt'
   Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-get_model_designations/data-processed/teamE-modelE/metadata-teamE-modelE.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-baseline/2020-12-07-COVIDhub-baseline.csv'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-baseline/2020-12-14-COVIDhub-baseline.csv'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-baseline/metadata-COVIDhub-baseline.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-ensemble/2020-12-07-COVIDhub-ensemble.csv'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-ensemble/2020-12-14-COVIDhub-ensemble.csv'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-load_forecasts/data-processed/COVIDhub-ensemble/metadata-COVIDhub-ensemble.txt'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-preprocess_truth_for_zoltar/2020-12-12/2020-12-12_time_series_covid19_deaths_US.csv'
     Warning in utils::tar(filepath, pkgname, compression = compression, compression_level = 9L,  :
     storing paths of more than 100 bytes is not portable:
     'covidHubUtils/tests/testthat/test-data/test-preprocess_truth_for_zoltar/2020-12-14/2020-12-14_time_series_covid19_deaths_US.csv'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'covidHubUtils' ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (covidHubUtils)
Skipping install of 'zoltr' from a github remote, the SHA1 (2994e696) has not changed since last install.
  Use `force = TRUE` to force installation
Skipping install of 'covidHubUtils' from a github remote, the SHA1 (06eef726) has not changed since last install.
  Use `force = TRUE` to force installation
     checking for file '/tmp/Rtmp02QPGX/remotesa6c36fdd4/cmu-delphi-covidcast-7446123/R-packages/evalcast/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa6c36fdd4/cmu-delphi-covidcast-7446123/R-packages/evalcast/DESCRIPTION'
  -  preparing 'evalcast':
     checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
  -  checking for LF line-endings in source and make files and shell scripts
  -  checking for empty or unneeded directories
  -  building 'evalcast_0.2.0.tar.gz'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'evalcast' ...
** using staged installation
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (evalcast)
> 
> ## Install evalcast from the evalcast branch
> devtools::install_github("cmu-delphi/covidcast", ref = "modeltools",
+                          subdir = "R-packages/modeltools", upgrade = "never")
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo cmu-delphi/covidcast@modeltools
     checking for file '/tmp/Rtmp02QPGX/remotesa1ac6d6fc/cmu-delphi-covidcast-091bc60/R-packages/modeltools/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa1ac6d6fc/cmu-delphi-covidcast-091bc60/R-packages/modeltools/DESCRIPTION'
  -  preparing 'modeltools':
   checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
     Warning: /tmp/RtmpPx5Yrr/Rbuild16834e94327/modeltools/man/create_train_and_predict_matrices.Rd:23: unexpected section header '\value'
     Warning: /tmp/RtmpPx5Yrr/Rbuild16834e94327/modeltools/man/create_train_and_predict_matrices.Rd:38: unexpected section header '\description'
   Warning: /tmp/RtmpPx5Yrr/Rbuild16834e94327/modeltools/man/create_train_and_predict_matrices.Rd:41: unexpected section header '\examples'
   Warning: /tmp/RtmpPx5Yrr/Rbuild16834e94327/modeltools/man/create_train_and_predict_matrices.Rd:59: unexpected END_OF_INPUT '
   '
  -  checking for LF line-endings in source and make files and shell scripts
  -  checking for empty or unneeded directories
       NB: this package now depends on R (>= 3.5.0)
       WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects: 'modeltools/data/covidhub_probs.rda'  WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects:  'modeltools/vignettes/quantgen-forecast-cv.rda'  WARNING: Added dependency on R >= 3.5.0 because serialized objects in  serialize/load version 3 cannot be read in older versions of R.  File(s) containing such objects:  'modeltools/vignettes/quantgen-forecast.rda'
  -  building 'modeltools_0.1.0.tar.gz'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'modeltools' ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** byte-compile and prepare package for lazy loading
** help
Warning: /tmp/Rtmp4phJJH/R.INSTALL17917765f59/modeltools/man/create_train_and_predict_matrices.Rd:23: unexpected section header '\value'
Warning: /tmp/Rtmp4phJJH/R.INSTALL17917765f59/modeltools/man/create_train_and_predict_matrices.Rd:38: unexpected section header '\description'
Warning: /tmp/Rtmp4phJJH/R.INSTALL17917765f59/modeltools/man/create_train_and_predict_matrices.Rd:41: unexpected section header '\examples'
Warning: /tmp/Rtmp4phJJH/R.INSTALL17917765f59/modeltools/man/create_train_and_predict_matrices.Rd:59: unexpected END_OF_INPUT '
'
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (modeltools)
> 
> ## Install the latest zookeeper
> devtools::install_github("cmu-delphi/covid-19-forecast", ref = "develop",
+                          subdir = "utilities/zookeeper", upgrade = "never")
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo cmu-delphi/covid-19-forecast@develop
     checking for file '/tmp/Rtmp02QPGX/remotesa4730905a/cmu-delphi-covid-19-forecast-086182d/utilities/zookeeper/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa4730905a/cmu-delphi-covid-19-forecast-086182d/utilities/zookeeper/DESCRIPTION'
  -  preparing 'zookeeper':
     checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
  -  checking for LF line-endings in source and make files and shell scripts
  -  checking for empty or unneeded directories
  -  building 'zookeeper_0.0.1.tar.gz'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'zookeeper' ...
** using staged installation
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (zookeeper)
> 
> ## Install the latest animalia
> devtools::install_github("cmu-delphi/covid-19-forecast", ref = "develop",
+                          subdir = "forecasters/animalia", upgrade = "never")
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo cmu-delphi/covid-19-forecast@develop
     checking for file '/tmp/Rtmp02QPGX/remotesa2b432e83/cmu-delphi-covid-19-forecast-086182d/forecasters/animalia/DESCRIPTION' ...  v  checking for file '/tmp/Rtmp02QPGX/remotesa2b432e83/cmu-delphi-covid-19-forecast-086182d/forecasters/animalia/DESCRIPTION'
  -  preparing 'animalia':
     checking DESCRIPTION meta-information ...  v  checking DESCRIPTION meta-information
  -  checking for LF line-endings in source and make files and shell scripts
  -  checking for empty or unneeded directories
  -  building 'animalia_0.1.0.tar.gz'
     
Installing package into '/usr/local/lib/R/site-library'
(as 'lib' is unspecified)
* installing *source* package 'animalia' ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (animalia)
> 
> source("params.R")
> 
> cat(sprintf("Forecast date: %s, Output dir: %s\n", forecast_date, output_dir))
Forecast date: 2021-04-05, Output dir: /mnt
> 
> library(tidyverse)
-- Attaching packages --------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.3     v purrr   0.3.4
v tibble  3.1.0     v dplyr   1.0.5
v tidyr   1.1.3     v stringr 1.4.0
v readr   1.4.0     v forcats 0.5.1
-- Conflicts ------------------------------------------ tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
> 
> cat("Running States\n")
Running States
> 
> aheads  <- 1:4
> 
> ## make_aardvark_corrector below uses the signals defaults. Arrange to use the parameter
> anteater_signals  <- forecaster_signals[["anteater"]]
> state_params <- zookeeper::default_state_params(data_source = anteater_signals$data_source,
+                                                 signal = anteater_signals$signal,
+                                                 geo_type = anteater_signals$geo_type)
> aa_corrector  <- zookeeper::make_aardvark_corrector(params = state_params)
> state_forecaster_args <- list(
+   ahead = aheads,
+   lags = c(0,7,14),
+   tau = evalcast::covidhub_probs(),
+   lambda = 0,
+   featurize = animalia::make_state_7dav_featurizer(),
+   verbose = TRUE,
+   save_wide_data = file.path(output_dir, state_output_subdir),
+   save_trained_models = file.path(output_dir, state_output_subdir)
+ )
> state_predictions <- evalcast::get_predictions(
+   forecaster = animalia::production_forecaster,
+   name_of_forecaster = "anteater",
+   signals = anteater_signals,
+   forecast_dates = forecast_date,
+   incidence_period = "epiweek",
+   apply_corrections = aa_corrector,
+   forecaster_args = state_forecaster_args
+ )
Downloading deaths_incidence_num from covidcast for period from 2021-01-21 to 2021-04-05.
Downloading confirmed_incidence_num from covidcast for period from 2021-01-21 to 2021-04-05.
Joining, by = c("data_source", "signal")

ahead = 1, 2, 3, 4
Warning messages:
1: Data not fetched for the following days: 2021-04-05 
2: Data not fetched for the following days: 2021-04-05 
> warnings()
Warning messages:
1: Data not fetched for the following days: 2021-04-05
2: Data not fetched for the following days: 2021-04-05
> 
> 
> cat("Writing State results\n")
Writing State results
> ## Write result
> saveRDS(state_predictions,
+         file = file.path(output_dir, state_output_subdir,
+                          sprintf("predictions_for_%s.RDS", forecast_date)))
> 
> cat("Running Counties\n")
Running Counties
> 
> 
> zebra_signals  <- forecaster_signals[["zebra"]]
> county_params  <- zookeeper::default_county_params(data_source = zebra_signals$data_source)
> zz_corrector  <- zookeeper::make_zyzzyva_corrector(params = county_params)
> 
> county_forecaster_args <- list(
+   ahead = aheads,
+   lags = list(c(0, 1, 2, seq(3, 21, 3)), seq(3,28,7), seq(3,28,7)), # Lags
+   tau = evalcast::covidhub_probs(type = "inc_case"),
+   lambda = 0,
+   featurize = animalia::make_county_7dav_featurizer(),
+   verbose = TRUE,
+   save_wide_data = file.path(output_dir, county_output_subdir),
+   save_trained_models = file.path(output_dir, county_output_subdir)
+ )
> county_predictions <- evalcast::get_predictions(
+   forecaster = animalia::production_forecaster,
+   name_of_forecaster = "zebra",
+   signals = zebra_signals,
+   forecast_dates = forecast_date,
+   incidence_period = "epiweek",
+   apply_corrections = zz_corrector,
+   forecaster_args = county_forecaster_args
+ )
Downloading confirmed_incidence_num from covidcast for period from 2021-01-07 to 2021-04-05.
Downloading smoothed_hh_cmnty_cli from covidcast for period from 2021-01-07 to 2021-04-05.
Downloading smoothed_cli from covidcast for period from 2021-01-07 to 2021-04-05.
Joining, by = c("data_source", "signal")

ahead = 1, 2, 3, 4
Warning messages:
1: Fetching confirmed_incidence_num from jhu-csse for 2021-04-05 to 2021-04-05 in geography '*': no results 
2: Fetching smoothed_hh_cmnty_cli from fb-survey for 2021-04-05 to 2021-04-05 in geography '*': no results 
3: Fetching smoothed_cli from doctor-visits for 2021-04-02 to 2021-04-02 in geography '*': no results 
4: Fetching smoothed_cli from doctor-visits for 2021-04-03 to 2021-04-03 in geography '*': no results 
5: Fetching smoothed_cli from doctor-visits for 2021-04-04 to 2021-04-04 in geography '*': no results 
6: Fetching smoothed_cli from doctor-visits for 2021-04-05 to 2021-04-05 in geography '*': no results 
> warnings()
Warning messages:
1: Fetching confirmed_incidence_num from jhu-csse for 2021-04-05 to 2021-04-05 in geography '*': no results
2: Fetching smoothed_hh_cmnty_cli from fb-survey for 2021-04-05 to 2021-04-05 in geography '*': no results
3: Fetching smoothed_cli from doctor-visits for 2021-04-02 to 2021-04-02 in geography '*': no results
4: Fetching smoothed_cli from doctor-visits for 2021-04-03 to 2021-04-03 in geography '*': no results
5: Fetching smoothed_cli from doctor-visits for 2021-04-04 to 2021-04-04 in geography '*': no results
6: Fetching smoothed_cli from doctor-visits for 2021-04-05 to 2021-04-05 in geography '*': no results
> 
> 
> cat("Writing county results\n")
Writing county results
> ## Write result
> saveRDS(county_predictions,
+         file = file.path(output_dir, county_output_subdir,
+                          sprintf("predictions_for_%s.RDS", forecast_date)))
> 
> cat("Running QA for States\n")
Running QA for States
> 
> ## Render the QA report
> rmarkdown::render(input = "anteater.Rmd", output_file = sprintf("anteater_%s.html", forecast_date),
+                   output_dir = file.path(output_dir, state_output_subdir))


processing file: anteater.Rmd
  |                                                                              |                                                                      |   0%  |                                                                              |..............                                                        |  20%
   inline R code fragments

  |                                                                              |............................                                          |  40%
label: setup (with options) 
List of 2
 $ include: logi FALSE
 $ echo   : logi FALSE

  |                                                                              |..........................................                            |  60%
  ordinary text without R code

  |                                                                              |........................................................              |  80%
label: unnamed-chunk-1 (with options) 
List of 4
 $ fig.height: num 80
 $ fig.width : num 30
 $ dev       : chr "CairoSVG"
 $ echo      : logi FALSE

  |                                                                              |......................................................................| 100%
  ordinary text without R code


output file: anteater.knit.md

/usr/bin/pandoc +RTS -K512m -RTS anteater.utf8.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output /mnt/state-output/anteater_2021-04-05.html --lua-filter /usr/local/lib/R/site-library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /usr/local/lib/R/site-library/rmarkdown/rmarkdown/lua/latex-div.lua --self-contained --variable bs3=TRUE --standalone --section-divs --template /usr/local/lib/R/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable theme=bootstrap --include-in-header /tmp/Rtmp02QPGX/rmarkdown-stra34b84622.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: state-output/anteater_2021-04-05.html
> 
> cat("Done with States\n")
Done with States
> cat("Running QA for Counties\n")
Running QA for Counties
> 
> ## Render the QA report
> rmarkdown::render(input = "zebra.Rmd", output_file = sprintf("zebra_%s.html", forecast_date),
+                   output_dir = file.path(output_dir, county_output_subdir))


processing file: zebra.Rmd
  |                                                                              |                                                                      |   0%  |                                                                              |..................                                                    |  25%
   inline R code fragments

  |                                                                              |...................................                                   |  50%
label: setup (with options) 
List of 3
 $ include: logi FALSE
 $ echo   : logi FALSE
 $ message: logi FALSE

  |                                                                              |....................................................                  |  75%
  ordinary text without R code

  |                                                                              |......................................................................| 100%
label: unnamed-chunk-1 (with options) 
List of 5
 $ fig.height: num 120
 $ fig.width : num 30
 $ dev       : chr "CairoSVG"
 $ echo      : logi FALSE
 $ message   : logi FALSE

Joining, by = c("data_source", "signal")


output file: zebra.knit.md

/usr/bin/pandoc +RTS -K512m -RTS zebra.utf8.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output /mnt/county-output/zebra_2021-04-05.html --lua-filter /usr/local/lib/R/site-library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /usr/local/lib/R/site-library/rmarkdown/rmarkdown/lua/latex-div.lua --self-contained --variable bs3=TRUE --standalone --section-divs --template /usr/local/lib/R/site-library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable theme=bootstrap --include-in-header /tmp/Rtmp02QPGX/rmarkdown-stra4219aa79.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' 

Output created: county-output/zebra_2021-04-05.html
> 
> cat("Done with Counties\n")
Done with Counties
> 
> cat("Combine submission files")
Combine submission files> combined <- bind_rows(state_predictions, county_predictions)
> combined <- zookeeper::format_predictions_for_reichlab_submission(combined)
> 
> readr::write_csv(combined,
+                  file = file.path(
+                    output_dir,
+                    sprintf("%s-CMU-TimeSeries.csv", forecast_date)))
> 
> ## Save session info
> sessionInfo()
R version 4.0.5 (2021-03-31)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 20.04.2 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0

locale:
[1] C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] lubridate_1.7.10 zookeeper_0.0.1  evalcast_0.2.0   forcats_0.5.1   
 [5] stringr_1.4.0    dplyr_1.0.5      purrr_0.3.4      readr_1.4.0     
 [9] tidyr_1.1.3      tibble_3.1.0     ggplot2_3.3.3    tidyverse_1.3.0 

loaded via a namespace (and not attached):
 [1] fs_1.5.0           usethis_2.0.1      devtools_2.3.2     RColorBrewer_1.1-2
 [5] httr_1.4.2         rprojroot_2.0.2    tools_4.0.5        backports_1.2.1   
 [9] utf8_1.2.1         R6_2.5.0           DBI_1.1.1          colorspace_2.0-0  
[13] withr_2.4.1        tidyselect_1.1.0   prettyunits_1.1.1  processx_3.5.0    
[17] curl_4.3           compiler_4.0.5     cli_2.3.1          rvest_1.0.0       
[21] Cairo_1.5-12.2     xml2_1.3.2         desc_1.3.0         labeling_0.4.2    
[25] slam_0.1-48        scales_1.1.1       callr_3.6.0        digest_0.6.27     
[29] rmarkdown_2.7      pkgconfig_2.0.3    htmltools_0.5.1.1  sessioninfo_1.1.1 
[33] animalia_0.1.0     highr_0.8          dbplyr_2.1.0       fastmap_1.1.0     
[37] rlang_0.4.10       readxl_1.3.1       rstudioapi_0.13    farver_2.1.0      
[41] generics_0.1.0     zoo_1.8-9          jsonlite_1.7.2     magrittr_2.0.1    
[45] modeltools_0.1.0   Matrix_1.3-2       Rcpp_1.0.6         munsell_0.5.0     
[49] fansi_0.4.2        lifecycle_1.0.0    stringi_1.5.3      Rglpk_0.6-4       
[53] yaml_2.2.1         pkgbuild_1.2.0     grid_4.0.5         parallel_4.0.5    
[57] crayon_1.4.1       lattice_0.20-41    haven_2.3.1        hms_1.0.0         
[61] knitr_1.31         ps_1.6.0           pillar_1.5.1       igraph_1.2.6      
[65] pkgload_1.2.0      reprex_2.0.0       glue_1.4.2         evaluate_0.14     
[69] genlasso_1.5       data.table_1.14.0  remotes_2.3.0      modelr_0.1.8      
[73] vctrs_0.3.7        covidcast_0.4.1    testthat_3.0.2     cellranger_1.1.0  
[77] gtable_0.3.0       quantgen_1.0.0     assertthat_0.2.1   cachem_1.0.4      
[81] xfun_0.22          broom_0.7.5        MMWRweek_0.1.3     RcppRoll_0.3.0    
[85] memoise_2.0.0      ellipsis_0.3.1    
> 
> proc.time()
   user  system elapsed 
657.436   9.656 827.498 
