% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_corrections.R
\name{update_corrections}
\alias{update_corrections}
\title{Replace corrections data for a geo type with new data}
\usage{
update_corrections(db_path, geo_type, new_df)
}
\arguments{
\item{db_path}{the path for the SQLite database, for example
`~/Github/covidcast-forecast/corrections/corrections.sqlite`}

\item{geo_type}{the `geo_type`, one of `"state"` or `"county"`}

\item{new_df}{the new data to replace the old}
}
\value{
`TRUE` invisibly
}
\description{
Overwrites the corrections records for a geo type with new data after checking that schemas match.
}
\examples{
\dontrun{
  ## Make a test copy, so as not to clobber original
  file.copy(from = "~/Github/covidcast-forecast/data_corrections/data_corrections.sqlite", to = "./test.sqlite")
  d <- get_data_corrections(db_path = "./test.sqlite", geo_type = "state")  ## 21-row tibble
  ## Delete all rows but the first five
  d <- d[1:5, ]
  update_corrections("./test.sqlite", "state", d)
  get_data_corrections(db_path = "./test.sqlite", geo_type = "state")  ## 5-row tibble
  ## Modify d by adding a column
  d$foo <- 1
  update_corrections("./test.sqlite", "state", d) ## should fail
}
}
