% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_corrections.R
\name{apply_corrections}
\alias{apply_corrections}
\title{Apply corrections, if available, to upstream data frame}
\usage{
apply_corrections(df, geo_type, corrections_db_path)
}
\arguments{
\item{df}{the upstream data frame corresponding to the geo type}

\item{geo_type}{the geo_type corresponding to the upstream data
frame}

\item{corrections_db_path}{the path for the SQLite database, for example
`~/Github/covidcast-forecast/corrections/corrections.sqlite`}
}
\value{
a df with corrections applied if the corrections are
    available, or same dataframe
}
\description{
Corrections data are replacement records for the original data
using the schema described above. This function returns a new
tibble by removing the matching original data, the matching being
done using the variables `location`, `reference_date` and
`variable_name`, and appending the entire corrections data at the
end. Ideally, this function should only make corrections that a
properly versioned data frame cannot account for, i.e. persistent
bad data rows that are likely to mess up forecasting algorithms
(this has the salutory effect of keeping the number of corrections
small).
}
\examples{

\dontrun{
  e  <- new.env()
  load("upstream_df_state_2020-09-06_final.Rdata", envir = e)
  new_df <- apply_corrections(df = e$df, geo_type = "state", "~/Github/covidcast-forecast/data_corrections/data_corrections.sqlite")
  nrow(e$df) == nrow(new_df)  # Same number of rows?
}
}
